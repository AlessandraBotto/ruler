,Timestamp,"Overall, which tool did you prefer and why?","What advantages, if any, did Ruler have over Snorkel?","What advantages, if any, did Snorkel have over Ruler?",Do you have any feedback about how the study was conducted?,Any other comments?,participant
0,5/19/2020 17:36:26,"I liked them both. I think that I would probably use Ruler if I wanted to get results quickly, unless I already had a template for Snorkel like the Jupyter Notebook we used in the study. I do often like to have complete control over things, which is why I may favor the Snorkel experience in some cases, but Ruler was definitely easier to use. I think I would opt to use Ruler in most cases (particularly, simpler cases), but I would want to use Snorkel when hoping to create more complex labeling functions that utilize extraneous data like sentiment corpus, model output, etc.",The Ruler UI was definitely more intuitive and could enable a user to save time. I think that an extension that tracks the performance over time and enables the user to select a time-specific model would add another important benefit to Ruler.,"In Snorkel, you can define any function you would like. Here are the three main useful function attributes I can think of you can utilize in Snorkel but not in Ruler:
1. You can take extraneous data into account (like a token sentiment corpus, output from a sentence-level sentiment scoring model, topic labels, etc.).
2. You can also use logic at multiple levels (token, n-gram, multi-span, sentence, and document). In Ruler, you can only use logic at the token, n-gram, multi-span levels, and I am not immediately certain that you can use logic from all levels in tandem within a function.
3. You can utilize meta-analysis of the text.

Here is an example of a complex function that uses extraneous data at multiple text levels: return POSITIVE if topic (extraneous data/model output, document-specific) == iPhone and mean_sentence_length_chars > 100 (meta-analysis of the sentences) and mean_vader_sentiment (extraneous data, token-specific) and review_likes > 10 (extraneous metadata, document_specific)

However, I think that these could be integrated into Ruler, which is already a superior product for many use cases and for many individuals.",The study was great! I really enjoyed it. I hope we do more like it.,I feel like I will use both tools for future projects.,p3
1,5/19/2020 22:47:37,"Snorkel because I'm failiar with jupytyer. Ruler was also great, but initially I found it hard to operate.",No programming is necessary.,Powerful expression of labeling functions.,The turorials are very convincing. ,"I think I did better in Snorkel than in Ruler, but it was possibly because for me some of the Amazon reviews were hard to understand due to my poor English.... Anyway, it was great exercise also for me. Thank you!",p0
2,5/21/2020 15:01:53,Ruler,"Simple label function that rely on keywords are much easier and faster to write with Ruler. For both tasks, I did not write complex label logic, so with the same time, I can write more label functions with Ruler. ","Snorkel accept any python method, thus users can still write complex logics (e.g., logic that reply on dependency parsing or other NLP packages like NLTK or Spacy) with Snorkel.",,,p1
3,5/22/2020 1:21:39,"- I prefer Ruler if I have a limited amount of time, say ~1 hour. It's definitely easier to use.
- I'd slightly prefer using Snorkel if I had more than 2-3 hours. My impression is that there could be no way left to improve the model with Ruler after 10-20 labeling functions. The same thing may be said to Snorkel. But, given the fact that Snorkel offers more flexibility, there might be a chance to make a better model with Snorkel (if I had enough time.)
- In any case, I'd jump into doing by myself if I had more than a half day. In my opinion, Ruler's best use-case is when there is a limited amount of time and the user lacks skills in programming.",- 1) Much better UI - 2) Easier to create labeling functions. The user doesn't have to write python code - 3) Easier to monitor dev set performance - 1+2+3) Easier to run the label creation/modification loop ,"- 1) More flexible. A labeling function is a Python function. I could even use an external classifier to build a labeling function.
- 2) Can apply any rules, independent of the example I see.","As I mentioned in the last survey, the order of the tools may affect the performance and impression. It should be randomly shuffled for a fair comparison.",,p2
4,5/22/2020 16:23:10,"It depends on what is your goal. I would prefer using Ruler in the following situations:
1) I want to quickly generate labeled examples without diving deep in very specific characteristics of the dataset;
2) I do not have much knowledge about the data, so I would benefit from creating the rules based on what I see while browsing examples;
3) I'm not familiar with the programming language used in Snorkel

And I would prefer using snorkel (or a programming-language-based tool) if I need to add more complex/specific characteristics of my data/problem to the rules, or even in cases when I want to label my examples based on ""non-symbolic"" (not based on rules) models.  ","Simplicity, easiness to use, speed in achieving good performance.",Allows using more complex labelers.,,,p4
5,5/26/2020 14:05:03,"Snorkel, although it needs much more time to come up with good functions, you can do anything you want and use any packages or libraries (which in my opinion, is an advantage)",It was much simpler...maybe more suitable for data that can be labeled with very specific patterns ,You could implement much more complicated functions,,,p5
6,5/27/2020 16:37:12,"Hard to say, both tools have strengths and weaknesses. ",1. coding free 2. instant statistics,1. support python,Spam task seems easier than Sentiment task. ,,p6
7,5/28/2020 0:56:26,Ruler,Creating rules by example easily ,Better control,,,p7
8,5/28/2020 16:10:18,"Ruler. Generally speaking I prefer the one with an interactive interface, which allows me to directly generate LF from the example. ",Showing the result of regex on the example; NER; no need to code for simple LFs; automatically reevaluation.,The flexibility in combining and editing LFs.,As I gave in the Ruler survey.,,p8
9,5/28/2020 18:33:22,"Ruler. I could generate reasonable labeling rules with high coverages with the help of linking, concept-building interfaces. ",Ruler saves significant time compared Snorkel because it provides functionalities to build concepts incrementally and link between tokens.,Snorkel provides a higher degree of freedom of labeling functions,,,p9
